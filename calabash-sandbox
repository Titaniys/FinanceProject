#!/usr/bin/env bash

SCRIPT_VERSION="1.0.0"

SANDBOX_DIR="${HOME}/.calabash/sandbox"
THIS_SCRIPT=$(basename $0)

if [ "$(uname -s)" != "Darwin" ]; then
  echo "Calabash-sandbox only runs on macOS"
  exit 1
fi

OS_MAJOR_VERSION=`uname -r | cut -d. -f1`

if [ "${OS_MAJOR_VERSION}" != "15" ] && [ "${OS_MAJOR_VERSION}" != "16" ]; then
  echo "Calabash-sandbox is only supported on macOS El Cap and Sierra"
  exit 1
fi

is_command_in_path()
{
    command -v "$1" >/dev/null 2>&1
}

if is_command_in_path "rbenv"; then
  echo "Detected that rbenv is already installed."
  echo "You cannot use the calabash-sandbox."
  exit 1
fi

if is_command_in_path "rvm"; then
  echo "Detected that rvm is already installed."
  echo "You cannot use the calabash-sandbox."
  exit 1
fi

if [ "${1}" == "version" ]; then
  echo "Calabash sandbox version: ${SCRIPT_VERSION}"
  exit 0
elif [ "${1}" == "update" ]; then
  echo "Updating gems..."
  cd "${SANDBOX_DIR}"
  curl -O --fail --progress-bar \
    https://raw.githubusercontent.com/calabash/install/master/Gemfile.OSX 2> /dev/null

  EC=$?
  if [ $EC -ne 0 ]; then
    echo "Unable to download newest Gemfile. Please try again."
    exit $EC
  else
    mv Gemfile.OSX Gemfile
    # Install within sandbox to ensure gems are available in sandbox
    { echo "bundle update >&2" |  "${THIS_SCRIPT}" 1>/dev/null; } 2>&1
    echo
    echo "Done! Now the sandbox contains:"
    IOS=$( { echo "calabash-ios version >&2" | "${THIS_SCRIPT}" 1>/dev/null; } 2>&1)
    DROID=$( { echo "calabash-android version >&2" | "${THIS_SCRIPT}" 1>/dev/null; } 2>&1)
    TCS=$( { echo "test-cloud version >&2" | "${THIS_SCRIPT}" 1>/dev/null; } 2>&1)
    echo -e "\033[0;33mcalabash-ios:       $IOS"
    echo "calabash-android:   $DROID"
    echo -e "xamarin-test-cloud: $TCS\033[00m"
    exit 0
  fi
fi

RUBY_VERSION="2.3.1"
RUBIES_DIR="${SANDBOX_DIR}/Rubies"
RUBY_PATH="${RUBIES_DIR}/${RUBY_VERSION}/bin"
RUBY_LIB="${RUBIES_DIR}/${RUBY_VERSION}/lib"
export GEM_HOME="${SANDBOX_DIR}/Gems"
export GEM_PATH="${RUBY_LIB}/ruby/gems/2.3.0:${GEM_HOME}:${GEM_HOME}/ruby/2.3.0"
OPENSSL_LIB="${RUBIES_DIR}/${RUBY_VERSION}/openssl/lib"
export RUBYLIB="${OPENSSL_LIB}:${RUBY_LIB}:${RUBY_LIB}/ruby/2.3.0/x86_64-darwin16:${RUBY_LIB}/ruby/2.3.0:${RUBY_LIB}/ruby/site_ruby/2.3.0"
export PATH="${RUBY_PATH}:${GEM_HOME}/bin:${PATH}"

export PS1='\[\e[1;32m\][\u@calabash-sandbox]\$\[\e[0m\] ' # '[<user>@calabash-sandbox]$ '
echo -e "\033[0;32mThis terminal is now ready to use with Calabash.\033[00m"
echo -e "\033[0;34mTo exit, type 'exit'.\033[00m"
bash && echo -e "\n\033[0;32mThis terminal is back to normal.\033[00m"
